@page "/exhibits"
@page "/exhibits/{category}"
@using WEB_153501_Antilevskaya.Domain.Entities;

<PageTitle>Exhibits</PageTitle>

<AuthorizeView>

    <Authorized>
        <p>This component demonstrates fetching data from the server.</p>
        @if (DataService.ObjectsList == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <CategorySelector SelectedCategory="@SelectedName" CategoryChanged="HandleCategoryChanged"></CategorySelector>
            <ExhibitsList ExhibitSelected="GetExhibit"></ExhibitsList>
            <Pager PageChanged="OnPageChanged"></Pager>
            <ExhibitDetails SelectedExhibit="@SelectedExhibit"></ExhibitDetails>
        }
    </Authorized>

    <NotAuthorized>
        <h3>You should authorize first!!!</h3>
    </NotAuthorized>

</AuthorizeView>


@code {
    [Inject]
    public IDataService DataService { get; set; }
    [Parameter] public string? Category {get; set;}
    public string? SelectedName { get; set; }
    public Exhibit? SelectedExhibit { get; set; }

    private async Task HandleCategoryChanged(string selectedCategory)
    {
        Category = selectedCategory;
        await RefreshData();
    }

    protected override async Task OnParametersSetAsync()
    {
        await RefreshData();
    }

    private async Task RefreshData()
    {
        await DataService.GetProductListAsync(Category);

        if (Category != null)
        {
            SelectedName = DataService.Categories.FirstOrDefault(c => c.NormalizedName.Equals(Category)).Name;
        }
        else
        {
            SelectedName = null;
        }
    }

    private async Task OnPageChanged(int newPage)
    {
        await DataService.GetProductListAsync(Category, newPage);
    }

    public void GetExhibit(int id)
    {
        SelectedExhibit = DataService.ObjectsList.FirstOrDefault(obj => obj.Id == id);
        StateHasChanged();
    }
}

